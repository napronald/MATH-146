clear all; clc;

% load('coefficients.mat')
format long
% Formulation of A,b using x,f(x)
f = @(x) cos(4*x);
x = linspace(0,1,50);
y = f(x);

A = ones(length(x),12);
b = y';

for j=1:11
    A(:,j+1) = A(:,j).*x';
end

%% i) Normal equations 
clc;

% M = A'*A;
% B = A'*b;
% [coe] = nap.Ax_B(M,B)

M = A'*A;
y = A'*b;
R_t = nap.cholesky(M);
R = transpose(R_t);
[z] = nap.forward_sub(R_t,y);
[coe] = nap.back_sub(R,z)

res = b - A*coe
normal_res = norm(res,2)

norm_cond_num = cond(R_t)
% normal_rel_err = norm((coe-coeffs),2) / norm(coeffs,2)

%% ii) QR factorization generated by classical Gram-Schmidt
clc;

[Q, R] = nap.gram_schmidt(A); % A=QR
c = Q'*b; % c = Q'*b
[coe] = nap.back_sub(R,c) % Rx=c

res = b - A*coe
cgs_res = norm(res,2)

cgs_cond_num = cond(R)
% cgs_rel_err = norm((coe-coeffs),2) / norm(coeffs,2)

%% iii) QR factorization generated by modified Gram-Schmidt
clc;

[Q, R] = nap.modified_gram_schmidt(A);
c = Q'*b; % c = Q'*b
[coe] = nap.back_sub(R,c) % Rx=c

res = b - A*coe
mgs_res = norm(res,2)

mgs_cond_num = cond(R)
% mgs_rel_err = norm((coe-coeffs),2) / norm(coeffs,2)

%% iv) QR factorization generated by Householder reflectors
clc;

[Q,R] = nap.house_holder(A);
c = Q'*b; % c = Q'*b
[coe] = nap.back_sub(R,c) % Rx=c

res = b - A*coe
hou_res = norm(res,2)

hou_cond_num = cond(R)
% hou_rel_err = norm((coe-coeffs),2) / norm(coeffs,2)


%% v) Matlab's least squares solver
clc;

coe = A \ b

res = b - A*coe
mat_res = norm(res,2)

mat_cond_num = cond(A)
% mat_rel_err = norm((coe-coeffs),2) / norm(coeffs,2)

%% Table of Relative Error
clc;
emach = 1e-16;

Method = ["Normal equations"; "Classical Gram-Schmidt"; "Modified Gram-Schmidt"; "Householder"; "Matlab"];
% Relative_Error = [normal_rel_err; cgs_rel_err; mgs_rel_err; hou_rel_err; mat_rel_err];
Norm_Residual = [normal_res; cgs_res; mgs_res; hou_res; mat_res];
Condition_Number = [norm_cond_num; cgs_cond_num; mgs_cond_num; hou_cond_num; mat_cond_num];
Predicted_Rel_Err = emach*[norm_cond_num; cgs_cond_num; mgs_cond_num; hou_cond_num; mat_cond_num];

T = table(Method,Norm_Residual,Condition_Number,Predicted_Rel_Err)